# docker/docker-compose.yml
version: "3.7"
services:
  nginx:
    image: nginx
    hostname: nginx.docker.local
    volumes:
      - ./containers/nginx/etc/nginx/conf.d:/etc/nginx/conf.d
      - ./containers/nginx/etc/nginx/sites-available:/etc/nginx/sites-available
      - ./containers/nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./containers/nginx/usr/share/nginx/html/maintenance.html:/usr/share/nginx/html/maintenance.html
      - ../src:/opt/dim
    depends_on:
      - php
    ports:
      - target: 80
        published: 80
    networks:
      - private_network
  
  php:
    build:
      context: ./containers/php
    hostname: php.docker.local
    volumes:
      - ../src:/opt/dim
    depends_on:
      - db
    environment:
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@127.0.0.1:${POSTGRES_PORT}/${POSTGRES_DB}?serverVersion=12.4
    networks:
      - private_network
  
  db:
    image: postgres:12.4
    restart: always
    hostname: db.docker.local
    volumes:
      - ./containers/db/etc/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./data/db/pgdata:/pgdata
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /pgdata
    networks:
      - private_network

networks:
  private_network:
